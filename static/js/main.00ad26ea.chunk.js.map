{"version":3,"sources":["serviceWorker.js","components/Navbar/Navbar.js","components/Main/Main.js","components/MyCities/MyCities.js","components/About/About.js","components/RoutePack/RoutePack.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","useEffect","document","title","className","to","Main","API_KEY","useState","maxTemp","setMaxTemp","minTemp","setMinTemp","temp","setTemp","type","setType","city","setCity","feels","setFeels","humid","setHumid","symbol","setSymbol","axios","get","then","res","data","main","temp_max","temp_min","weather","feels_like","humidity","id","onChange","e","newCity","target","value","t","toFixed","getTemp","f","getFeelsTemp","max","getMaxTemp","min","getMinTemp","onClick","post","City","Temperature","alert","handleSubmit","MyCities","myCity","setMyCity","handleRemove","parentNode","delete","currentTarget","remove","myCityArray","myTempArray","myCityID","key","push","map","index","createMyCitiesList","About","style","display","flexDirection","textAlign","color","textDecoration","href","borderRadius","width","margin","src","alt","RoutePack","basename","path","exact","component","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.00ad26ea.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nexport default function Navbar() {\n  useEffect(() => {\n    document.title = \"Weather App\";\n  });\n  return (\n    <div className=\"navbar\">\n      <h3>My Weather Application</h3>\n      <ul>\n        <Link to=\"/\">\n          <li>Home</li>\n        </Link>\n        <Link to=\"/MyCities\">\n          <li>My Cities</li>\n        </Link>\n        <Link to=\"/About\">\n          <li>About</li>\n        </Link>\n      </ul>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Main.css\";\r\n\r\nexport default function Main() {\r\n  const API_KEY = \"52fc60ce71a5b4b724a42352692d2d24\";\r\n  const [maxTemp, setMaxTemp] = useState(\"\");\r\n  const [minTemp, setMinTemp] = useState(\"\");\r\n  const [temp, setTemp] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [city, setCity] = useState(\"Kolkata\");\r\n  const [feels, setFeels] = useState(\"\");\r\n  const [humid, setHumid] = useState(\"\");\r\n  const [symbol, setSymbol] = useState(\"°C\");\r\n\r\n  const getTemp = (symbol) => {\r\n    var t = 0;\r\n    switch (symbol) {\r\n      case \"°C\":\r\n        t = (temp - 273).toFixed(0);\r\n        break;\r\n      case \"K\":\r\n        t = temp.toFixed(0);\r\n        break;\r\n      case \"°F\":\r\n        t = ((temp - 273) * (9 / 5) + 32).toFixed(0);\r\n        break;\r\n      default:\r\n    }\r\n    return t;\r\n  };\r\n  const getMinTemp = (symbol) => {\r\n    var min = 0;\r\n    switch (symbol) {\r\n      case \"°C\":\r\n        min = (minTemp - 273).toFixed(0);\r\n        break;\r\n      case \"K\":\r\n        min = minTemp.toFixed(0);\r\n        break;\r\n      case \"°F\":\r\n        min = ((minTemp - 273) * (9 / 5) + 32).toFixed(0);\r\n        break;\r\n      default:\r\n    }\r\n    return min;\r\n  };\r\n  const getMaxTemp = (symbol) => {\r\n    var max;\r\n    switch (symbol) {\r\n      case \"°C\":\r\n        max = (maxTemp - 273).toFixed(0);\r\n        break;\r\n      case \"K\":\r\n        max = maxTemp.toFixed(0);\r\n        break;\r\n      case \"°F\":\r\n        max = ((maxTemp - 273) * (9 / 5) + 32).toFixed(0);\r\n        break;\r\n      default:\r\n    }\r\n    return max;\r\n  };\r\n  const getFeelsTemp = (symbol) => {\r\n    var f;\r\n    switch (symbol) {\r\n      case \"°C\":\r\n        f = (feels - 273).toFixed(0);\r\n        break;\r\n      case \"K\":\r\n        f = feels.toFixed(0);\r\n        break;\r\n      case \"°F\":\r\n        f = ((feels - 273) * (9 / 5) + 32).toFixed(0);\r\n        break;\r\n      default:\r\n    }\r\n    return f;\r\n  };\r\n\r\n  function newCity(city) {\r\n    setCity(city);\r\n    axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`\r\n      )\r\n      .then((res) => {\r\n        setTemp(res.data.main.temp);\r\n        setMaxTemp(res.data.main.temp_max);\r\n        setMinTemp(res.data.main.temp_min);\r\n        setType(res.data.weather[0].main);\r\n        setFeels(res.data.main.feels_like);\r\n        setHumid(res.data.main.humidity);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=kolkata&appid=${API_KEY}`\r\n      )\r\n      .then((res) => {\r\n        setTemp(res.data.main.temp);\r\n        setMaxTemp(res.data.main.temp_max);\r\n        setMinTemp(res.data.main.temp_min);\r\n        setType(res.data.weather[0].main);\r\n        setFeels(res.data.main.feels_like);\r\n        setHumid(res.data.main.humidity);\r\n      });\r\n    document.title = \"Weather App\";\r\n  }, []);\r\n\r\n  function handleSubmit(e) {\r\n    let t = (temp - 273).toFixed(0);\r\n    axios\r\n      .post(`https://weather-app-64739.firebaseio.com/.json`, {\r\n        City: city,\r\n        Temperature: `${t}°C`,\r\n      })\r\n      .then(alert(`${city} has been added successfully!`));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <label>Select a city : </label>\r\n        <select id=\"choose\" onChange={(e) => newCity(e.target.value)}>\r\n          <option value=\"Kolkata\">Kolkata</option>\r\n          <option value=\"New Delhi\">New Delhi</option>\r\n          <option value=\"Mumbai\">Mumbai</option>\r\n          <option value=\"Bangalore\">Bangalore</option>\r\n          <option value=\"Chennai\">Chennai</option>\r\n          <option value=\"Ahmedabad\">Ahmedabad</option>\r\n          <option value=\"Hyderabad\">Hyderabad</option>\r\n          <option value=\"Pune\">Pune</option>\r\n        </select>\r\n      </form>\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <h3 id=\"city\">{city}</h3>\r\n          <h1 id=\"temp\">\r\n            {getTemp(symbol)}\r\n            {symbol}\r\n          </h1>\r\n          <h5>\r\n            <i>\r\n              Feels like : {getFeelsTemp(symbol)}\r\n              {symbol}\r\n            </i>\r\n          </h5>\r\n          <span id=\"type\">{type}</span>\r\n          <span>\r\n            {getMaxTemp(symbol)}\r\n            {symbol} / {getMinTemp(symbol)}\r\n            {symbol}\r\n          </span>\r\n          <p>Humidity : {humid} &#37;</p>\r\n          <div className=\"temptype\">\r\n            <span>Temperature Type :</span>\r\n            <button id=\"c\" className=\"tempbtn\" onClick={() => setSymbol(\"°C\")}>\r\n              &#8451;\r\n            </button>\r\n            <button id=\"k\" className=\"tempbtn\" onClick={() => setSymbol(\"K\")}>\r\n              K\r\n            </button>\r\n            <button id=\"f\" className=\"tempbtn\" onClick={() => setSymbol(\"°F\")}>\r\n              &#8457;\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"addCity\">\r\n        <button className=\"addbtn\" onClick={(e) => handleSubmit(e)}>\r\n          Add {city} to My Cities\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./MyCities.css\";\r\n\r\nexport default function MyCities() {\r\n  const [myCity, setMyCity] = useState([]);\r\n\r\n  const createMyCitiesList = () => {\r\n    const myCityArray = [];\r\n    const myTempArray = [];\r\n    const myCityID = [];\r\n    for (let key in myCity) {\r\n      const city = myCity[key].City;\r\n      const temp = myCity[key].Temperature;\r\n      const id = key;\r\n      myCityArray.push(city);\r\n      myTempArray.push(temp);\r\n      myCityID.push(id);\r\n    }\r\n    const cityList = myCityArray.map((city, index) => (\r\n      <div className=\"city\" id={myCityID[index]} key={index}>\r\n        <span>{city}</span>\r\n        <span>{myTempArray[index]}</span>\r\n        <button id=\"removebtn\" onClick={(e) => handleRemove(e)}>\r\n          Remove\r\n        </button>\r\n      </div>\r\n    ));\r\n    return cityList;\r\n  };\r\n\r\n  const handleRemove = (e) => {\r\n    let id = e.target.parentNode.id;\r\n    axios.delete(`https://weather-app-64739.firebaseio.com/${id}.json`);\r\n    e.currentTarget.parentNode.remove();\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"My Cities\";\r\n    axios\r\n      .get(\"https://weather-app-64739.firebaseio.com/.json\")\r\n      .then((res) => setMyCity(res.data));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>My Cities</h2>\r\n      <div className=\"box\">\r\n        <div className=\"cityContainer\">{createMyCitiesList()}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\n\r\nexport default function About() {\r\n  useEffect(() => {\r\n    document.title = \"About\";\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <br></br>\r\n      <br></br>\r\n      <h3 style={{ textAlign: \"center\" }}>\r\n        Designed and Developed with &#10084; by{\" \"}\r\n        <a\r\n          style={{ color: \"blue\", textDecoration: \"underline\" }}\r\n          href=\"https://github.com/rishavjaiss/weather-app\"\r\n          target=\"blank\"\r\n        >\r\n          Rishav\r\n        </a>\r\n      </h3>\r\n      <img\r\n        style={{ borderRadius: \"50%\", width: \"250px\", margin: \"auto\" }}\r\n        src=\"https://scontent.fccu3-1.fna.fbcdn.net/v/t1.0-9/18527848_1325000874252607_3977818397876930436_n.jpg?_nc_cat=107&_nc_sid=7aed08&_nc_oc=AQlAw4HNTRIMsz-o_699tFESdFK0PsvBxUJ-C6tfNTHOUQSc092WUeeZZOy9hTwaYvw&_nc_ht=scontent.fccu3-1.fna&oh=db49e146861ad0d89863f9bd99db3301&oe=5EDF13AC\"\r\n        alt=\"Profile Pic\"\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar/Navbar.js\";\r\nimport Main from \"../Main/Main.js\";\r\nimport MyCities from \"../MyCities/MyCities.js\";\r\nimport About from \"../About/About.js\";\r\n\r\nfunction RoutePack() {\r\n  return (\r\n    <Router basename=\"weather-app\">\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Main} />\r\n        <Route path=\"/MyCities\" component={MyCities} />\r\n        <Route path=\"/About\" component={About} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\nexport default RoutePack;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import Navbar from \"./components/Navbar/Navbar\";\n// import Main from \"./components/Main/Main\";\nimport RoutePack from \"./components/RoutePack/RoutePack\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RoutePack />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}